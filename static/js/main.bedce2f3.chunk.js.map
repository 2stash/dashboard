{"version":3,"sources":["context/data/dataContext.js","components/data/Person.js","components/data/Project.js","components/charts/People.js","components/charts/Projects.js","components/landing/excel.PNG","components/landing/herodashboard.gif","STORE.js","components/landing/LandingPage.js","App.js","context/types.js","context/data/dataReducer.js","context/data/DataState.js","index.js"],"names":["dataContext","createContext","Person","props","data","useContext","DataContext","className","name","personActionsByProject","projectList","map","project","index","projects","length","action","actions","hours","reduce","accumulator","reducer","priority","description","Project","processedData","useState","console","log","peopleArray","person","owner","People","employeeList","hoursArray","setHoursArray","dataParsed","setDataParsed","chartColors","chartData","tempTotal","i","projectName","projectsArray","forEach","push","datasets","projectData","label","backgroundColor","labels","width","height","options","maintainAspectRatio","scales","xAxes","stacked","yAxes","Projects","projectOrder","setProjectOrder","tempArray","personName","hoursCount","dataForChart","tempProjectOrder","personData","STORE","projectHours","LandingPage","setInitialState","importData","importedData","processData","display","hideshow","setHideShow","hideGenericButton","setHideGenericButton","onClick","type","onChange","e","uploadedFiles","target","files","uploadedFilesDataArray","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","result","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_json","onerror","error","then","info","multiple","placeholder","style","src","gif","alt","excel","App","setPersonData","setProjectData","window","location","reload","personChangeHandler","projectChangeHandler","SET_STORE","IMPORT_DATA","BUILD_DASHBOARD","state","payload","loading","DataState","useReducer","DataReducer","dispatch","Provider","value","peopleSet","Set","projectSet","newStore","actionNameList","add","excelRow","Owner","projectArray","actionName","ID","Priority","Description","Hours","Array","from","tempPersonProjectSet","actionList","tempPersonProjectArray","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bedce2f3.chunk.js","sourcesContent":["import {createContext} from 'react';\r\nconst dataContext = createContext();\r\nexport default dataContext;","import React, { useContext } from \"react\";\r\nimport DataContext from \"../../context/data/dataContext\";\r\n\r\nconst Person = (props) => {\r\n  const dataContext = useContext(DataContext);\r\n  const { data } = dataContext;\r\n  return (\r\n    <div className='people'>\r\n      <h3 className='personnel-title'>{props.name}</h3>\r\n      <div>\r\n        <h4 className='personnel-title'>Total # of Actions by Project</h4>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Project</th>\r\n              <th>Number of Actions</th>\r\n              <th>Hours</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data &&\r\n              data.personActionsByProject[props.name].projectList.map(\r\n                (project, index) => (\r\n                  <tr key={`${project}-${index}`}>\r\n                    <td>{project}</td>\r\n                    <td>\r\n                      {data &&\r\n                        data.personActionsByProject[props.name].projects[\r\n                          project\r\n                        ].length}\r\n                    </td>\r\n                    <td>\r\n                      {data &&\r\n                        data.personActionsByProject[props.name].projects[\r\n                          project\r\n                        ]\r\n                          .map((action) => data.actions[action].hours)\r\n                          .reduce(\r\n                            (accumulator, reducer) => accumulator + reducer\r\n                          )}\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <h4 className='personnel-title'>High Priority Actions</h4>\r\n      <div>\r\n        {data ? (\r\n          <div>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Project</th>\r\n                  <th>Description</th>\r\n                  <th>Hours</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.personActionsByProject[props.name].projectList.map(\r\n                  (project, index) =>\r\n                    data.personActionsByProject[props.name].projects[\r\n                      project\r\n                    ].map((action) =>\r\n                      data.actions[action].priority === \"High\" ? (\r\n                        <tr key={`${index}-${action}`}>\r\n                          <td>{data.actions[action].project}</td>\r\n                          <td>{data.actions[action].description}</td>\r\n                          <td>{data.actions[action].hours}</td>\r\n                        </tr>\r\n                      ) : null\r\n                    )\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React, { useState, useContext } from \"react\";\r\nimport DataContext from \"../../context/data/dataContext\";\r\n\r\nconst Project = (props) => {\r\n  const dataContext = useContext(DataContext);\r\n  const { data, processedData } = dataContext;\r\n\r\n  const [loadedData, setLoadedData] = useState(data);\r\n\r\n  // let dataToDisplay = loadedData;\r\n\r\n  if (processedData !== null) {\r\n    console.log(processedData);\r\n    // setLoadedData(processedData)\r\n    // dataToDisplay = processedData\r\n  }\r\n\r\n  return (\r\n    <div className='project'>\r\n      <h3 className='personnel-title'>{props.name}</h3>\r\n      <div>\r\n        <h4 className='personnel-title'>Total # of Actions by Project</h4>\r\n\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Owner</th>\r\n              <th>Description</th>\r\n              <th>Hours</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data &&\r\n              data.peopleArray.map((person) => (\r\n                data.personActionsByProject[person].projects[props.name]\r\n                  ? data.personActionsByProject[person].projects[\r\n                      props.name\r\n                    ].map((action) => (\r\n                      <tr key={action}>\r\n                        <td>{data.actions[action].owner}</td>\r\n                        <td>{data.actions[action].description}</td>\r\n                        <td>{data.actions[action].hours}</td>\r\n                      </tr>\r\n                    ))\r\n                  : null\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport DataContext from \"../../context/data/dataContext\";\r\n\r\nconst People = () => {\r\n  const dataContext = useContext(DataContext);\r\n  const { data } = dataContext;\r\n  const [hoursArray, setHoursArray] = useState([])\r\n  const [dataParsed, setDataParsed] = useState(false);\r\n  const [chartCreated, setChartsCreated] = useState(false);\r\n\r\n  const chartColors = ['#1abc9c','#2ecc71','#3498db','#9b59b6','#34495e','#f1c40f','#e67e22','#e74c3c','#ecf0f1','#95a5a6','#16a085','#27ae60','#2980b9','#8e44ad','#2c3e50','#f39c12','#d35400','#c0392b','#bdc3c7','#7f8c8d' ]\r\n  let chartData = null;\r\n  let employeeList;\r\n  if(data){\r\n    employeeList = data.peopleArray\r\n  }\r\n\r\n  if(data !== null && dataParsed !==true){\r\n    let tempTotal = [];\r\n    let hours = [];\r\n    // Loop Through List of Projects\r\n    for(let i = 0; i < data.projectsArray.length; i++){\r\n      let projectName = data.projectsArray[i];\r\n      tempTotal = []\r\n      // loop through people\r\n         data.peopleArray.forEach(person => {\r\n\r\n          if(data.personActionsByProject[person].projects[projectName]){\r\n            tempTotal.push(data.personActionsByProject[person].projects[projectName].map(action => data.actions[action].hours).reduce((accumulator, reducer)=> accumulator + reducer))\r\n          } else {\r\n            tempTotal.push(0)\r\n          }       \r\n        })\r\n\r\n        hours.push(tempTotal)\r\n      }\r\n \r\n      // [0] project 1 : [person 1, person 2, person 3]\r\n      // [0] project 2 : [person 1, person 2, person 3]\r\n      // [0] project 3 : [person 1, person 2, person 3]\r\n      setHoursArray(hours)\r\n      setDataParsed(true)\r\n  }\r\n\r\n  if(data !== null && dataParsed === true){\r\n    let datasets = [];\r\n\r\n    for(let i = 0; i < data.projectsArray.length; i++){\r\n      let projectName = data.projectsArray[i];\r\n      let projectData = {};\r\n      projectData.label = projectName;\r\n      projectData.data = hoursArray[i];\r\n      projectData.backgroundColor = chartColors[i] || \"white\";\r\n      datasets.push(projectData)\r\n\r\n    }\r\n\r\n    chartData = {\r\n      labels: employeeList,\r\n      datasets: datasets\r\n    };\r\n  }\r\n\r\n\r\n\r\n  return ( chartData &&\r\n    <div className='people-dept'>\r\n       <Bar\r\n        data={chartData}\r\n        width={100}\r\n        height={50}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            xAxes: [{ stacked: true }],\r\n            yAxes: [{ stacked: true }],\r\n          },\r\n        }}\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport DataContext from \"../../context/data/dataContext\";\r\n\r\nconst Projects = () => {\r\n  const dataContext = useContext(DataContext);\r\n  const { data } = dataContext;\r\n  const [hoursArray, setHoursArray] = useState([]);\r\n  const [dataParsed, setDataParsed] = useState(false);\r\n  const [projectOrder, setProjectOrder] = useState([]);\r\n\r\n  const chartColors = ['#1abc9c','#2ecc71','#3498db','#9b59b6','#34495e','#f1c40f','#e67e22','#e74c3c','#ecf0f1','#95a5a6','#16a085','#27ae60','#2980b9','#8e44ad','#2c3e50','#f39c12','#d35400','#c0392b','#bdc3c7','#7f8c8d' ]\r\n  let chartData = null;\r\n  let projectList;\r\n  if (data) {\r\n    projectList = data.projectsArray;\r\n  }\r\n\r\n  // Add up project hours per person, by project\r\n  if (data !== null && dataParsed !== true) {\r\n    let tempArray = [];\r\n    let hours = [];\r\n    // Loop through list of People\r\n    for (let i = 0; i < data.peopleArray.length; i++) {\r\n      hours = [];\r\n      let personName = data.peopleArray[i];\r\n\r\n      // Get the Persons List of Projects\r\n      data.projectsArray.forEach((project) => {\r\n        if (data.personActionsByProject[personName].projects[project]) {\r\n          let hoursCount = data.personActionsByProject[personName].projects[\r\n            project\r\n          ]\r\n            .map((action) => data.actions[action].hours)\r\n            .reduce((accumulator, reducer) => accumulator + reducer);\r\n\r\n          hours.push([hoursCount, personName, project]);\r\n        } else {\r\n          hours.push([0, personName, project]);\r\n        }\r\n      });\r\n      tempArray.push(hours);\r\n    }\r\n\r\n    let dataForChart = [];\r\n    let tempProjectOrder = [];\r\n    for (let i = 0; i < tempArray[0].length; i++) {\r\n      tempProjectOrder.push(tempArray[0][i][2]);\r\n    }\r\n    tempArray.forEach((person) => {\r\n      dataForChart.push(person.map((hours) => hours[0]));\r\n    });\r\n\r\n    setHoursArray(dataForChart);\r\n    setProjectOrder(tempProjectOrder);\r\n    // set data parsed to true so this function only runs once\r\n    setDataParsed(true);\r\n  }\r\n\r\n  if (data !== null && dataParsed === true) {\r\n    let datasets = [];\r\n    for (let i = 0; i < data.peopleArray.length; i++) {\r\n      let personName = data.peopleArray[i];\r\n      let personData = {};\r\n      personData.label = personName;\r\n      personData.data = hoursArray[i];\r\n      personData.backgroundColor = chartColors[i] || \"white\";\r\n      datasets.push(personData);\r\n    }\r\n    chartData = {\r\n      labels: projectOrder,\r\n      datasets: datasets,\r\n    };\r\n  }\r\n\r\n  return (\r\n    chartData && (\r\n      <div className='project-dept'>\r\n        <Bar\r\n          data={chartData}\r\n          width={100}\r\n          height={50}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n              xAxes: [{ stacked: true }],\r\n              yAxes: [{ stacked: true }],\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","export default __webpack_public_path__ + \"static/media/excel.6019f20b.PNG\";","export default __webpack_public_path__ + \"static/media/herodashboard.9e096cb9.gif\";","const STORE = {\r\n  projectsArray: [\"project-1\", \"project-2\", \"project-3\"],\r\n  peopleArray: [\"person-1\", \"person-2\", \"person-3\"],\r\n  personActionsByProject: {\r\n    \"person-1\": {\r\n      projectList: [\"project-1\", \"project-2\", \"project-3\"],\r\n      projects: {\r\n        \"project-1\": [\"p1-action-1\", \"p1-action-2\", \"p1-action-3\"],\r\n        \"project-2\": [\"p2-action-1\", \"p2-action-2\", \"p2-action-3\"],\r\n        \"project-3\": [\"p3-action-1\", \"p3-action-2\", \"p3-action-3\"],\r\n      },\r\n      hours: {\r\n        \"project-1\": 24,\r\n        \"project-2\": 24,\r\n        \"project-3\": 24,\r\n      }\r\n    },\r\n    \"person-2\": {\r\n      projectList: [\"project-1\", \"project-2\", \"project-3\"],\r\n      projects: {\r\n        \"project-1\": [\"p1-action-4\", \"p1-action-5\", \"p1-action-6\"],\r\n        \"project-2\": [\"p2-action-4\", \"p2-action-5\", \"p2-action-6\"],\r\n        \"project-3\": [\"p3-action-4\", \"p3-action-5\"],\r\n      },\r\n      hours: {\r\n        \"project-1\": 24,\r\n        \"project-2\": 24,\r\n        \"project-3\": 24,\r\n      }\r\n    },\r\n    \"person-3\": {\r\n      projectList: [\"project-1\", \"project-2\", \"project-3\"],\r\n      projects: {\r\n        \"project-1\": [\"p1-action-7\", \"p1-action-8\"],\r\n        \"project-2\": [\"p2-action-7\", \"p2-action-8\", \"p2-action-9\"],\r\n        \"project-3\": [\"p3-action-6\", \"p3-action-7\", \"p3-action-8\"],\r\n      },\r\n      hours: {\r\n        \"project-1\": 24,\r\n        \"project-2\": 24,\r\n        \"project-3\": 24,\r\n      }\r\n    },\r\n  },\r\n  projectHours: {\r\n    \"project-1\": [24, 24,24],\r\n    \"project-2\": [24, 24,24],\r\n    \"project-3\": [24, 24,24],\r\n  },\r\n  actions: {\r\n    \"p1-action-1\": {\r\n      priority: \"High\",\r\n      description: \"Complete p1-action-1\",\r\n      hours: 8,\r\n      owner: \"person-1\",\r\n      project: \"project-1\",\r\n    },\r\n    \"p1-action-2\": {\r\n      priority: \"Normal\",\r\n      description: \"Complete p1-action-2\",\r\n      hours: 3,\r\n      owner: \"person-1\",\r\n      project: \"project-1\",\r\n    },\r\n    \"p1-action-3\": {\r\n      priority: \"Normal\",\r\n      description: \"Complete p1-action-3\",\r\n      hours: 5,\r\n      owner: \"person-1\",\r\n      project: \"project-1\",\r\n    },\r\n    \"p2-action-1\": {\r\n      priority: \"Normal\",\r\n      description: \"Complete p2-action-1\",\r\n      hours: 8,\r\n      owner: \"person-1\",\r\n      project: \"project-2\",\r\n    },\r\n    \"p2-action-2\": {\r\n      priority: \"High\",\r\n      description: \"Complete p2-action-2\",\r\n      hours: 8,\r\n      owner: \"person-1\",\r\n      project: \"project-2\",\r\n    },\r\n    \"p2-action-3\": {\r\n      priority: \"Normal\",\r\n      description: \"Complete p2-action-3\",\r\n      hours: 1,\r\n      owner: \"person-1\",\r\n      project: \"project-2\",\r\n    },\r\n    \"p3-action-1\": {\r\n      priority: \"Normal\",\r\n      description: \"Complete p3-action-1\",\r\n      hours: 2,\r\n      owner: \"person-1\",\r\n      project: \"project-3\",\r\n    },\r\n    \"p3-action-2\": {\r\n      priority: \"Normal\",\r\n      description: \"Complete p3-action-2\",\r\n      hours: 3,\r\n      owner: \"person-1\",\r\n      project: \"project-3\",\r\n    },\r\n    \"p3-action-3\": {\r\n      priority: \"High\",\r\n      description: \"Complete p3-action-3\",\r\n      hours: 1,\r\n      owner: \"person-1\",\r\n      project: \"project-3\",\r\n    },\r\n    \"p1-action-4\": {\r\n      priority: \"High\",\r\n      description: \"Complete p1-action-4\",\r\n      hours: 8,\r\n      owner: \"person-2\",\r\n      project: \"project-1\",\r\n    },\r\n    \"p1-action-5\": {\r\n      priority: \"Normal\",\r\n      description: \"Complete p1-action-5\",\r\n      hours: 1,\r\n      owner: \"person-2\",\r\n      project: \"project-1\",\r\n    },\r\n    \"p1-action-6\": {\r\n      priority: \"Normal\",\r\n      description: \"Complete p1-action-6\",\r\n      hours: 2,\r\n      owner: \"person-2\",\r\n      project: \"project-1\",\r\n    },\r\n    \"p2-action-4\": {\r\n      priority: \"Normal\",\r\n      description: \"Complete p2-action-4\",\r\n      hours: 3,\r\n      owner: \"person-2\",\r\n      project: \"project-2\",\r\n    },\r\n    \"p2-action-5\": {\r\n      priority: \"Normal\",\r\n      description: \"Complete p2-action-5\",\r\n      hours: 2,\r\n      owner: \"person-2\",\r\n      project: \"project-2\",\r\n    },\r\n    \"p2-action-6\": {\r\n      priority: \"High\",\r\n      description: \"Complete p2-action-6\",\r\n      hours: 8,\r\n      owner: \"person-2\",\r\n      project: \"project-2\",\r\n    },\r\n    \"p3-action-4\": {\r\n      priority: \"Normal\",\r\n      description: \"Complete p3-action-4\",\r\n      hours: 4,\r\n      owner: \"person-2\",\r\n      project: \"project-3\",\r\n    },\r\n    \"p3-action-5\": {\r\n      priority: \"High\",\r\n      description: \"Complete p3-action-5\",\r\n      hours: 8,\r\n      owner: \"person-2\",\r\n      project: \"project-3\",\r\n    },\r\n    \"p1-action-7\": {\r\n      priority: \"Normal\",\r\n      description: \"Complete p1-action-7\",\r\n      hours: 8,\r\n      owner: \"person-3\",\r\n      project: \"project-1\",\r\n    },\r\n    \"p1-action-8\": {\r\n      priority: \"High\",\r\n      description: \"Complete p1-action-8\",\r\n      hours: 8,\r\n      owner: \"person-3\",\r\n      project: \"project-1\",\r\n    },\r\n    \"p2-action-7\": {\r\n      priority: \"High\",\r\n      description: \"Complete p2-action-7\",\r\n      hours: 8,\r\n      owner: \"person-3\",\r\n      project: \"project-2\",\r\n    },\r\n    \"p2-action-8\": {\r\n      priority: \"Normal\",\r\n      description: \"Complete p2-action-8\",\r\n      hours: 8,\r\n      owner: \"person-3\",\r\n      project: \"project-2\",\r\n    },\r\n    \"p2-action-9\": {\r\n      priority: \"High\",\r\n      description: \"Complete p2-action-9\",\r\n      hours: 8,\r\n      owner: \"person-3\",\r\n      project: \"project-2\",\r\n    },\r\n    \"p3-action-6\": {\r\n      priority: \"High\",\r\n      description: \"Complete p3-action-6\",\r\n      hours: 8,\r\n      owner: \"person-3\",\r\n      project: \"project-3\",\r\n    },\r\n    \"p3-action-7\": {\r\n      priority: \"High\",\r\n      description: \"Complete p3-action-7\",\r\n      hours: 8,\r\n      owner: \"person-3\",\r\n      project: \"project-3\",\r\n    },\r\n    \"p3-action-8\": {\r\n      priority: \"Normal\",\r\n      description: \"Complete p3-action-8\",\r\n      hours: 8,\r\n      owner: \"person-3\",\r\n      project: \"project-3\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default STORE;\r\n","import React, {useState, useContext} from \"react\";\r\nimport excel from \"./excel.PNG\";\r\nimport gif from \"./herodashboard.gif\";\r\nimport DataContext from \"../../context/data/dataContext\";\r\nimport * as XLSX from 'xlsx';\r\nimport STORE from \"../../STORE\";\r\n\r\nconst LandingPage = () => {\r\n  const dataContext = useContext(DataContext);\r\n  const { setInitialState,importData, importedData,processData } = dataContext;\r\n\r\n  const [hideshow, setHideShow] = useState({display:\"none\"})\r\n\r\n  const [hideGenericButton, setHideGenericButton] = useState({})\r\n\r\n\r\n  const readExcel = (e) => {\r\n\r\n    const uploadedFiles = e.target.files;\r\n    const uploadedFilesDataArray = [];\r\n    \r\n    for(let i = 0; i < uploadedFiles.length; i++){\r\n      let promise = new Promise((resolve, reject) => {\r\n        let fileReader = new FileReader();\r\n        fileReader.readAsArrayBuffer(uploadedFiles[i])\r\n  \r\n        fileReader.onload=(e)=> {\r\n\r\n          let bufferArray = e.target.result;\r\n  \r\n          let wb = XLSX.read(bufferArray, {type: 'buffer'});\r\n  \r\n          let wsname = wb.SheetNames[0];\r\n  \r\n          let ws = wb.Sheets[wsname];\r\n  \r\n          let data = XLSX.utils.sheet_to_json(ws)\r\n  \r\n          resolve([data, wsname])\r\n        }\r\n  \r\n        fileReader.onerror = ((error)=>{\r\n          reject(error)\r\n        })\r\n      })\r\n  \r\n      promise.then((info)=> {\r\n        let data = info[0]\r\n        let wsname = info[1]\r\n \r\n        uploadedFilesDataArray.push([data,wsname])\r\n       })\r\n\r\n    }\r\n\r\n    importData(uploadedFilesDataArray)\r\n    setHideShow({})\r\n    setHideGenericButton({display: \"none\"})\r\n  }\r\n\r\n  const buildDashboard = () => {\r\n    processData(importedData)\r\n  }\r\n\r\n  const handleFakeDashboard = () => {\r\n    setInitialState(STORE)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='landing-container'>\r\n      <div className='landing-hero-container'>\r\n        <h1 className='landing-hero-text'>\r\n          Build your dashboard from excel files!\r\n        </h1>\r\n        <div className='landing-sub-text'>\r\n          ExcelDash allows you to upload multiple action item lists and a\r\n          dash board will be created <strong>instantly</strong>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n      <h2>Wanna check out the Dashboard?</h2>\r\n    \r\n      <button onClick={handleFakeDashboard} className={hideGenericButton}>Create Generic Dashboard</button>\r\n</div>\r\n\r\n      <div>\r\n      <h2>Wanna try with your own data?</h2>\r\n      <input type=\"file\" onChange={readExcel} multiple placeholder=\"Upload Your Files\"/>\r\n        <button onClick={buildDashboard} style={hideshow}>Build Dashboard</button>\r\n</div>\r\n\r\n\r\n\r\n      \r\n\r\n      <h2 className='how-to-use-hero'>Combine multiple files into one dashboard</h2>\r\n        <div className='combine-files'>\r\n        <div>\r\n          <div className='icons'>\r\n            <span className='icon-excel'>\r\n              <i className='far fa-file-excel'></i>\r\n            </span>\r\n            <span className='icon-person'>\r\n              <i className='fas fa-user'></i>\r\n            </span>\r\n          </div>\r\n          <div className='icons'>\r\n            <span className='icon-excel'>\r\n              <i className='far fa-file-excel'></i>\r\n            </span>\r\n            <span className='icon-person'>\r\n              <i className='fas fa-user'></i>\r\n            </span>\r\n          </div>\r\n          <div className='icons'>\r\n            <span className='icon-excel'>\r\n              <i className='far fa-file-excel'></i>\r\n            </span>\r\n            <span className='icon-person'>\r\n              <i className='fas fa-user'></i>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <span className='icon-arrow'>\r\n            <i className='fas fa-arrow-right'></i>\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <img className=\"image-gif\" src={gif} alt=\"gif of dashboard\"/>\r\n        </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n      <div className='how-to-use'>\r\n        <h2 className='how-to-use-hero margin-top'>Name your columns as shown below!</h2>\r\n\r\n        <div className='how-to-use-table'>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Project</th>\r\n                <th>Priority</th>\r\n                <th>Owner</th>\r\n                <th>Description</th>\r\n                <th>Hours</th>\r\n              </tr>\r\n            </thead>\r\n            {/* <tbody>\r\n            <tr>\r\n              <td>1</td>\r\n              <td>Paper</td>\r\n              <td>High</td>\r\n              <td>Jim</td>\r\n              <td>Sell Paper to </td>\r\n              <td>8</td>\r\n            </tr>\r\n            <tr>\r\n              <td>2</td>\r\n              <td>Paper</td>\r\n              <td>High</td>\r\n              <td>Pam</td>\r\n              <td>Respond to customer information request.</td>\r\n              <td>2</td>\r\n            </tr>\r\n          </tbody> */}\r\n          </table>\r\n        </div>\r\n          \r\n        <h2 className='how-to-use-hero'>\r\n          Here is an picture of an example file\r\n        </h2>\r\n        <img src={excel} className='excel-img' />\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React, { useEffect, useContext, useState, Fragment } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport DataContext from \"./context/data/dataContext\";\n\nimport Person from \"./components/data/Person\";\nimport Project from \"./components/data/Project\";\nimport People from \"./components/charts/People\";\nimport Projects from \"./components/charts/Projects\";\n\nimport LandingPage from './components/landing/LandingPage'\n\n\n\nconst App = () => {\n  const dataContext = useContext(DataContext);\n  const { setInitialState, data, importData, importedData,processData } = dataContext;\n\n  const [personData, setPersonData] = useState(\"\");\n  const [projectData, setProjectData] = useState(\"\");\n  const [hideshow, setHideShow] = useState({})\n\n  const [fileData, getFileData] = useState([]);\n\n  if(data !== null && personData === \"\"){\n    setPersonData(data.peopleArray[0])\n  }\n\n  if(data !== null && personData === \"\"){\n    setProjectData(data.projectsArray[0])\n  }\n\n  const personChangeHandler = (person) => {\n    setPersonData(person);\n  };\n\n  const projectChangeHandler = (project) => {\n    setProjectData(project);\n  };\n\n  const handleResetData = () => {\n    window.location.reload(false);\n  }\n\n  return (\n    <Router>\n      <nav className='main-nav'>\n        <h2>ExcelDash</h2>\n\n      {data &&\n        <button onClick={handleResetData}>Reset Data</button>\n      }\n      </nav>\n      <div className='container'>\n     \n \n\n        {data ? (\n          <div className='wrapper'>\n          <nav className='people-nav'>\n            <div className='title-div'>\n              <h4 className='title'>Personnel</h4>\n              <ul>\n                {data &&\n                  data.peopleArray.map((person) => (\n                    <li className='nav-li' key={person}>\n                      <button\n                        className='nav-btn'\n                        onClick={() => personChangeHandler(person)}\n                      >\n                        {person}\n                      </button>\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          </nav>\n          <nav className='project-nav'>\n            <div className='title-div'>\n              <h4 className='title'>Project</h4>\n\n              <ul>\n                {data &&\n                  data.projectsArray.map((project) => (\n                    <li className='nav-li' key={project}>\n                      <button\n                        className='nav-btn'\n                        onClick={() => projectChangeHandler(project)}\n                      >\n                        {project}\n                      </button>\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          </nav>\n\n          <Person name={personData} />\n          <People  />\n          <Project name={projectData} />\n          <Projects />\n          <footer className='main-footer'></footer>\n          </div>\n          ) :   (<LandingPage/>)\n        }\n         \n\n        \n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","export const SET_STORE = \"SET_STORE\";\r\nexport const IMPORT_DATA = \"IMPORT_DATA\";\r\nexport const BUILD_DASHBOARD = \"BUILD_DASHBOARD\";","import {SET_STORE, IMPORT_DATA,BUILD_DASHBOARD} from '../types';\r\n\r\nexport default(state, action) => {\r\n  const {type, payload} = action;\r\n  switch(type){\r\n    case SET_STORE:\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n        loading: false\r\n      };\r\n    case IMPORT_DATA:\r\n      return {\r\n        ...state,\r\n        importedData: payload,\r\n        loading: false,\r\n      };\r\n    case BUILD_DASHBOARD:\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n        loading: false,\r\n      }\r\n    default: \r\n      return {...state}\r\n  }\r\n}","import React, { useReducer } from \"react\";\r\nimport DataContext from \"./dataContext\";\r\nimport DataReducer from \"./dataReducer\";\r\nimport { SET_STORE, IMPORT_DATA, BUILD_DASHBOARD } from \"../types\";\r\n\r\nconst DataState = (props) => {\r\n  const initialState = {\r\n    data: null,\r\n    loading: false,\r\n    importedData: null,\r\n    processedData: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(DataReducer, initialState);\r\n\r\n  const setInitialState = (data) => {\r\n    dispatch({ type: SET_STORE, payload: data });\r\n  };\r\n\r\n  const importData = (data) => {\r\n    dispatch({ type: IMPORT_DATA, payload: data });\r\n  };\r\n\r\n  const processData = (data) => {\r\n    let personActionsByProject = {};\r\n    let peopleSet = new Set();\r\n    let projectSet = new Set();\r\n    let actions = {};\r\n    let newStore = {};\r\n    let actionNameList = []\r\n\r\n    data.map((project) => {\r\n      // Build Unique Program Name Set\r\n      projectSet.add(project[1]);\r\n\r\n      // Map Through Each Excel Row\r\n      project[0].map((excelRow) => {\r\n        // Build Unique Person Name Set\r\n        peopleSet.add(excelRow.Owner);\r\n      });\r\n    });\r\n\r\n    for (let person of peopleSet) {\r\n      personActionsByProject[person] = {};\r\n\r\n      // Create list of Actions\r\n      data.map((projectArray) => {\r\n        let projectName = projectArray[1];\r\n\r\n        projectArray[0].map((excelRow) => {\r\n          let actionName = projectName + excelRow.ID;\r\n          actionNameList.push(actionName)\r\n          actions[actionName] = {\r\n            priority: excelRow.Priority,\r\n            description: excelRow.Description,\r\n            hours: excelRow.Hours,\r\n            owner: excelRow.Owner,\r\n            project: projectName,\r\n          };\r\n        });\r\n      });\r\n    }\r\n\r\n    // Add Action Item List to Store\r\n    newStore.actions = actions;\r\n\r\n    // Add project list to Store\r\n    let projectsArray = Array.from(projectSet);\r\n    newStore.projectsArray = projectsArray;\r\n\r\n    // Add people list to Store\r\n    let peopleArray = Array.from(peopleSet);\r\n    newStore.peopleArray = peopleArray;\r\n\r\n    // Add list of people to Store\r\n    newStore.personActionsByProject = personActionsByProject;\r\n\r\n    for (let person of peopleSet) {\r\n      let tempPersonProjectSet = new Set() \r\n      let projects = {}\r\n      // Create list of Actions\r\n      data.map((projectArray) => {\r\n        let projectName = projectArray[1];\r\n        let actionList = []\r\n   \r\n        //Map thru each excel row\r\n        projectArray[0].map((excelRow) => {\r\n          if(excelRow.Owner === person){\r\n            // If Person array equals owner add to set\r\n            tempPersonProjectSet.add(projectName)\r\n\r\n            let actionName = projectName + excelRow.ID;\r\n            actionList.push(actionName)   \r\n            \r\n\r\n            projects[projectName] = actionList\r\n            \r\n          }   \r\n    \r\n\r\n        });\r\n\r\n        newStore.personActionsByProject[person].projects = projects\r\n\r\n        // add projectList to store per person\r\n        let tempPersonProjectArray = Array.from(tempPersonProjectSet)\r\n        newStore.personActionsByProject[person].projectList = tempPersonProjectArray\r\n      });\r\n\r\n\r\n    }\r\n\r\n    // console.log(newStore);\r\n    dispatch({ type: BUILD_DASHBOARD, payload: newStore });\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        data: state.data,\r\n        loading: state.loading,\r\n        importedData: state.importedData,\r\n        processedData: state.processedData,\r\n        setInitialState,\r\n        importData,\r\n        processData,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DataState;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport DataState from \"./context/data/DataState\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataState>\n      <App />\n    </DataState>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}