[{"C:\\Users\\Daniel\\projects\\danschedules\\src\\index.js":"1","C:\\Users\\Daniel\\projects\\danschedules\\src\\App.js":"2","C:\\Users\\Daniel\\projects\\danschedules\\src\\STORE.js":"3","C:\\Users\\Daniel\\projects\\danschedules\\src\\context\\data\\DataState.js":"4","C:\\Users\\Daniel\\projects\\danschedules\\src\\context\\data\\dataContext.js":"5","C:\\Users\\Daniel\\projects\\danschedules\\src\\context\\data\\dataReducer.js":"6","C:\\Users\\Daniel\\projects\\danschedules\\src\\context\\types.js":"7","C:\\Users\\Daniel\\projects\\danschedules\\src\\components\\sidebar\\Sidebar.js":"8","C:\\Users\\Daniel\\projects\\danschedules\\src\\components\\data\\Person.js":"9","C:\\Users\\Daniel\\projects\\danschedules\\src\\components\\data\\Project.js":"10","C:\\Users\\Daniel\\projects\\danschedules\\src\\components\\charts\\People.js":"11","C:\\Users\\Daniel\\projects\\danschedules\\src\\components\\charts\\Projects.js":"12","C:\\Users\\Daniel\\projects\\danschedules\\src\\components\\landing\\LandingPage.js":"13"},{"size":282,"mtime":1607035096807,"results":"14","hashOfConfig":"15"},{"size":3575,"mtime":1607822451089,"results":"16","hashOfConfig":"15"},{"size":5886,"mtime":1607296247617,"results":"17","hashOfConfig":"15"},{"size":3647,"mtime":1607536968231,"results":"18","hashOfConfig":"15"},{"size":103,"mtime":1607034730802,"results":"19","hashOfConfig":"15"},{"size":561,"mtime":1607533782639,"results":"20","hashOfConfig":"15"},{"size":131,"mtime":1607468593077,"results":"21","hashOfConfig":"15"},{"size":774,"mtime":1607122155488,"results":"22","hashOfConfig":"15"},{"size":2822,"mtime":1607537747138,"results":"23","hashOfConfig":"15"},{"size":1610,"mtime":1607549267304,"results":"24","hashOfConfig":"15"},{"size":2590,"mtime":1607608737986,"results":"25","hashOfConfig":"15"},{"size":3011,"mtime":1607608023850,"results":"26","hashOfConfig":"15"},{"size":6264,"mtime":1607833174842,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1p0y6sj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Daniel\\projects\\danschedules\\src\\index.js",[],["63","64"],"C:\\Users\\Daniel\\projects\\danschedules\\src\\App.js",["65","66","67","68","69","70","71","72","73","74","75","76","77"],"import React, { useEffect, useContext, useState, Fragment } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport DataContext from \"./context/data/dataContext\";\n\nimport Person from \"./components/data/Person\";\nimport Project from \"./components/data/Project\";\nimport People from \"./components/charts/People\";\nimport Projects from \"./components/charts/Projects\";\n\nimport LandingPage from \"./components/landing/LandingPage\";\n\nconst App = () => {\n  const dataContext = useContext(DataContext);\n  const {\n    setInitialState,\n    data,\n    importData,\n    importedData,\n    processData,\n  } = dataContext;\n\n  const [personData, setPersonData] = useState(\"\");\n  const [projectData, setProjectData] = useState(\"\");\n  const [hideshow, setHideShow] = useState({});\n\n  const [fileData, getFileData] = useState([]);\n\n  if (data !== null && personData === \"\") {\n    setPersonData(data.peopleArray[0]);\n  }\n\n  if (data !== null && personData === \"\") {\n    setProjectData(data.projectsArray[0]);\n  }\n\n  const personChangeHandler = (person) => {\n    setPersonData(person);\n  };\n\n  const projectChangeHandler = (project) => {\n    setProjectData(project);\n  };\n\n  const handleResetData = () => {\n    window.location.reload(false);\n  };\n\n  return (\n    <Router>\n      <nav className='main-nav'>\n        <div className='logo'>\n          <h2>ExcelDash</h2>\n          <div className=\"logo-div\">\n          <span className=\"logo-span\"><i className=\"fas fa-running fa-lg\"></i></span>\n          </div>\n        </div>\n\n        {/* <ul>\n          <li>\n            <Link>Try It</Link>\n          </li>\n          <li>\n            <Link>About Us</Link>\n          </li>\n          <li>\n            <Link>Contact</Link>\n          </li>\n      \n        </ul> */}\n        {data && <button onClick={handleResetData}>Reset Data</button>}\n      </nav>\n      <div >\n        {data ? (\n          <div className='wrapper'>\n            <nav className='people-nav'>\n              <div className='title-div'>\n                <h4 className='title'>Personnel</h4>\n                <ul>\n                  {data &&\n                    data.peopleArray.map((person) => (\n                      <li className='nav-li' key={person}>\n                        <button\n                          className='nav-btn'\n                          onClick={() => personChangeHandler(person)}\n                        >\n                          {person}\n                        </button>\n                      </li>\n                    ))}\n                </ul>\n              </div>\n            </nav>\n            <nav className='project-nav'>\n              <div className='title-div'>\n                <h4 className='title'>Project</h4>\n\n                <ul>\n                  {data &&\n                    data.projectsArray.map((project) => (\n                      <li className='nav-li' key={project}>\n                        <button\n                          className='nav-btn'\n                          onClick={() => projectChangeHandler(project)}\n                        >\n                          {project}\n                        </button>\n                      </li>\n                    ))}\n                </ul>\n              </div>\n            </nav>\n\n            <Person name={personData} />\n            <People />\n            <Project name={projectData} />\n            <Projects />\n            <footer className='main-footer'></footer>\n          </div>\n        ) : (\n          <LandingPage />\n        )}\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","C:\\Users\\Daniel\\projects\\danschedules\\src\\STORE.js",[],"C:\\Users\\Daniel\\projects\\danschedules\\src\\context\\data\\DataState.js",["78","79","80","81","82","83"],"import React, { useReducer } from \"react\";\r\nimport DataContext from \"./dataContext\";\r\nimport DataReducer from \"./dataReducer\";\r\nimport { SET_STORE, IMPORT_DATA, BUILD_DASHBOARD } from \"../types\";\r\n\r\nconst DataState = (props) => {\r\n  const initialState = {\r\n    data: null,\r\n    loading: false,\r\n    importedData: null,\r\n    processedData: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(DataReducer, initialState);\r\n\r\n  const setInitialState = (data) => {\r\n    dispatch({ type: SET_STORE, payload: data });\r\n  };\r\n\r\n  const importData = (data) => {\r\n    dispatch({ type: IMPORT_DATA, payload: data });\r\n  };\r\n\r\n  const processData = (data) => {\r\n    let personActionsByProject = {};\r\n    let peopleSet = new Set();\r\n    let projectSet = new Set();\r\n    let actions = {};\r\n    let newStore = {};\r\n    let actionNameList = []\r\n\r\n    data.map((project) => {\r\n      // Build Unique Program Name Set\r\n      projectSet.add(project[1]);\r\n\r\n      // Map Through Each Excel Row\r\n      project[0].map((excelRow) => {\r\n        // Build Unique Person Name Set\r\n        peopleSet.add(excelRow.Owner);\r\n      });\r\n    });\r\n\r\n    for (let person of peopleSet) {\r\n      personActionsByProject[person] = {};\r\n\r\n      // Create list of Actions\r\n      data.map((projectArray) => {\r\n        let projectName = projectArray[1];\r\n\r\n        projectArray[0].map((excelRow) => {\r\n          let actionName = projectName + excelRow.ID;\r\n          actionNameList.push(actionName)\r\n          actions[actionName] = {\r\n            priority: excelRow.Priority,\r\n            description: excelRow.Description,\r\n            hours: excelRow.Hours,\r\n            owner: excelRow.Owner,\r\n            project: projectName,\r\n          };\r\n        });\r\n      });\r\n    }\r\n\r\n    // Add Action Item List to Store\r\n    newStore.actions = actions;\r\n\r\n    // Add project list to Store\r\n    let projectsArray = Array.from(projectSet);\r\n    newStore.projectsArray = projectsArray;\r\n\r\n    // Add people list to Store\r\n    let peopleArray = Array.from(peopleSet);\r\n    newStore.peopleArray = peopleArray;\r\n\r\n    // Add list of people to Store\r\n    newStore.personActionsByProject = personActionsByProject;\r\n\r\n    for (let person of peopleSet) {\r\n      let tempPersonProjectSet = new Set() \r\n      let projects = {}\r\n      // Create list of Actions\r\n      data.map((projectArray) => {\r\n        let projectName = projectArray[1];\r\n        let actionList = []\r\n   \r\n        //Map thru each excel row\r\n        projectArray[0].map((excelRow) => {\r\n          if(excelRow.Owner === person){\r\n            // If Person array equals owner add to set\r\n            tempPersonProjectSet.add(projectName)\r\n\r\n            let actionName = projectName + excelRow.ID;\r\n            actionList.push(actionName)   \r\n            \r\n\r\n            projects[projectName] = actionList\r\n            \r\n          }   \r\n    \r\n\r\n        });\r\n\r\n        newStore.personActionsByProject[person].projects = projects\r\n\r\n        // add projectList to store per person\r\n        let tempPersonProjectArray = Array.from(tempPersonProjectSet)\r\n        newStore.personActionsByProject[person].projectList = tempPersonProjectArray\r\n      });\r\n\r\n\r\n    }\r\n\r\n    // console.log(newStore);\r\n    dispatch({ type: BUILD_DASHBOARD, payload: newStore });\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        data: state.data,\r\n        loading: state.loading,\r\n        importedData: state.importedData,\r\n        processedData: state.processedData,\r\n        setInitialState,\r\n        importData,\r\n        processData,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DataState;\r\n","C:\\Users\\Daniel\\projects\\danschedules\\src\\context\\data\\dataContext.js",[],"C:\\Users\\Daniel\\projects\\danschedules\\src\\context\\data\\dataReducer.js",["84"],"import {SET_STORE, IMPORT_DATA,BUILD_DASHBOARD} from '../types';\r\n\r\nexport default(state, action) => {\r\n  const {type, payload} = action;\r\n  switch(type){\r\n    case SET_STORE:\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n        loading: false\r\n      };\r\n    case IMPORT_DATA:\r\n      return {\r\n        ...state,\r\n        importedData: payload,\r\n        loading: false,\r\n      };\r\n    case BUILD_DASHBOARD:\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n        loading: false,\r\n      }\r\n    default: \r\n      return {...state}\r\n  }\r\n}","C:\\Users\\Daniel\\projects\\danschedules\\src\\context\\types.js",[],"C:\\Users\\Daniel\\projects\\danschedules\\src\\components\\sidebar\\Sidebar.js",["85","86","87"],"import React, { useContext } from \"react\";\r\nimport {Link, Switch, Route} from 'react-router-dom';\r\nimport DataContext from \"../../context/data/dataContext\";\r\nimport Person from \"../data/Person\";\r\n\r\nconst Sidebar = (props) => {\r\n  const dataContext = useContext(DataContext);\r\n  const { data } = dataContext;\r\n\r\n  return (\r\n    <div>\r\n    <nav className='main-nav'>\r\n    <h4>Personnel</h4>\r\n      <ul>\r\n        {data && data.peopleArray.map(person => (\r\n          <li key={person}><Link to=\"person\">{person}</Link></li>\r\n        ))}\r\n      </ul>\r\n\r\n      <ul>\r\n        {data && data.projectsArray.map(project=> (\r\n          <li key={project}><Link to=\"project\">{project}</Link></li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n",["88","89"],"C:\\Users\\Daniel\\projects\\danschedules\\src\\components\\data\\Person.js",[],"C:\\Users\\Daniel\\projects\\danschedules\\src\\components\\data\\Project.js",["90","91"],"import React, { useState, useContext } from \"react\";\r\nimport DataContext from \"../../context/data/dataContext\";\r\n\r\nconst Project = (props) => {\r\n  const dataContext = useContext(DataContext);\r\n  const { data, processedData } = dataContext;\r\n\r\n  const [loadedData, setLoadedData] = useState(data);\r\n\r\n  // let dataToDisplay = loadedData;\r\n\r\n  if (processedData !== null) {\r\n    console.log(processedData);\r\n    // setLoadedData(processedData)\r\n    // dataToDisplay = processedData\r\n  }\r\n\r\n  return (\r\n    <div className='project'>\r\n      <h3 className='personnel-title'>{props.name}</h3>\r\n      <div>\r\n        <h4 className='personnel-title'>Total # of Actions by Project</h4>\r\n\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Owner</th>\r\n              <th>Description</th>\r\n              <th>Hours</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data &&\r\n              data.peopleArray.map((person) => (\r\n                data.personActionsByProject[person].projects[props.name]\r\n                  ? data.personActionsByProject[person].projects[\r\n                      props.name\r\n                    ].map((action) => (\r\n                      <tr key={action}>\r\n                        <td>{data.actions[action].owner}</td>\r\n                        <td>{data.actions[action].description}</td>\r\n                        <td>{data.actions[action].hours}</td>\r\n                      </tr>\r\n                    ))\r\n                  : null\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","C:\\Users\\Daniel\\projects\\danschedules\\src\\components\\charts\\People.js",["92","93","94"],"import React, { useContext, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport DataContext from \"../../context/data/dataContext\";\r\n\r\nconst People = () => {\r\n  const dataContext = useContext(DataContext);\r\n  const { data } = dataContext;\r\n  const [hoursArray, setHoursArray] = useState([])\r\n  const [dataParsed, setDataParsed] = useState(false);\r\n  const [chartCreated, setChartsCreated] = useState(false);\r\n\r\n  const chartColors = ['#1abc9c','#2ecc71','#3498db','#9b59b6','#34495e','#f1c40f','#e67e22','#e74c3c','#ecf0f1','#95a5a6','#16a085','#27ae60','#2980b9','#8e44ad','#2c3e50','#f39c12','#d35400','#c0392b','#bdc3c7','#7f8c8d' ]\r\n  let chartData = null;\r\n  let employeeList;\r\n  if(data){\r\n    employeeList = data.peopleArray\r\n  }\r\n\r\n  if(data !== null && dataParsed !==true){\r\n    let tempTotal = [];\r\n    let hours = [];\r\n    // Loop Through List of Projects\r\n    for(let i = 0; i < data.projectsArray.length; i++){\r\n      let projectName = data.projectsArray[i];\r\n      tempTotal = []\r\n      // loop through people\r\n         data.peopleArray.forEach(person => {\r\n\r\n          if(data.personActionsByProject[person].projects[projectName]){\r\n            tempTotal.push(data.personActionsByProject[person].projects[projectName].map(action => data.actions[action].hours).reduce((accumulator, reducer)=> accumulator + reducer))\r\n          } else {\r\n            tempTotal.push(0)\r\n          }       \r\n        })\r\n\r\n        hours.push(tempTotal)\r\n      }\r\n \r\n      // [0] project 1 : [person 1, person 2, person 3]\r\n      // [0] project 2 : [person 1, person 2, person 3]\r\n      // [0] project 3 : [person 1, person 2, person 3]\r\n      setHoursArray(hours)\r\n      setDataParsed(true)\r\n  }\r\n\r\n  if(data !== null && dataParsed === true){\r\n    let datasets = [];\r\n\r\n    for(let i = 0; i < data.projectsArray.length; i++){\r\n      let projectName = data.projectsArray[i];\r\n      let projectData = {};\r\n      projectData.label = projectName;\r\n      projectData.data = hoursArray[i];\r\n      projectData.backgroundColor = chartColors[i] || \"white\";\r\n      datasets.push(projectData)\r\n\r\n    }\r\n\r\n    chartData = {\r\n      labels: employeeList,\r\n      datasets: datasets\r\n    };\r\n  }\r\n\r\n\r\n\r\n  return ( chartData &&\r\n    <div className='people-dept'>\r\n       <Bar\r\n        data={chartData}\r\n        width={100}\r\n        height={50}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n          scales: {\r\n            xAxes: [{ stacked: true }],\r\n            yAxes: [{ stacked: true }],\r\n          },\r\n        }}\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","C:\\Users\\Daniel\\projects\\danschedules\\src\\components\\charts\\Projects.js",["95","96"],"import React, { useContext, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport DataContext from \"../../context/data/dataContext\";\r\n\r\nconst Projects = () => {\r\n  const dataContext = useContext(DataContext);\r\n  const { data } = dataContext;\r\n  const [hoursArray, setHoursArray] = useState([]);\r\n  const [dataParsed, setDataParsed] = useState(false);\r\n  const [projectOrder, setProjectOrder] = useState([]);\r\n\r\n  const chartColors = ['#1abc9c','#2ecc71','#3498db','#9b59b6','#34495e','#f1c40f','#e67e22','#e74c3c','#ecf0f1','#95a5a6','#16a085','#27ae60','#2980b9','#8e44ad','#2c3e50','#f39c12','#d35400','#c0392b','#bdc3c7','#7f8c8d' ]\r\n  let chartData = null;\r\n  let projectList;\r\n  if (data) {\r\n    projectList = data.projectsArray;\r\n  }\r\n\r\n  // Add up project hours per person, by project\r\n  if (data !== null && dataParsed !== true) {\r\n    let tempArray = [];\r\n    let hours = [];\r\n    // Loop through list of People\r\n    for (let i = 0; i < data.peopleArray.length; i++) {\r\n      hours = [];\r\n      let personName = data.peopleArray[i];\r\n\r\n      // Get the Persons List of Projects\r\n      data.projectsArray.forEach((project) => {\r\n        if (data.personActionsByProject[personName].projects[project]) {\r\n          let hoursCount = data.personActionsByProject[personName].projects[\r\n            project\r\n          ]\r\n            .map((action) => data.actions[action].hours)\r\n            .reduce((accumulator, reducer) => accumulator + reducer);\r\n\r\n          hours.push([hoursCount, personName, project]);\r\n        } else {\r\n          hours.push([0, personName, project]);\r\n        }\r\n      });\r\n      tempArray.push(hours);\r\n    }\r\n\r\n    let dataForChart = [];\r\n    let tempProjectOrder = [];\r\n    for (let i = 0; i < tempArray[0].length; i++) {\r\n      tempProjectOrder.push(tempArray[0][i][2]);\r\n    }\r\n    tempArray.forEach((person) => {\r\n      dataForChart.push(person.map((hours) => hours[0]));\r\n    });\r\n\r\n    setHoursArray(dataForChart);\r\n    setProjectOrder(tempProjectOrder);\r\n    // set data parsed to true so this function only runs once\r\n    setDataParsed(true);\r\n  }\r\n\r\n  if (data !== null && dataParsed === true) {\r\n    let datasets = [];\r\n    for (let i = 0; i < data.peopleArray.length; i++) {\r\n      let personName = data.peopleArray[i];\r\n      let personData = {};\r\n      personData.label = personName;\r\n      personData.data = hoursArray[i];\r\n      personData.backgroundColor = chartColors[i] || \"white\";\r\n      datasets.push(personData);\r\n    }\r\n    chartData = {\r\n      labels: projectOrder,\r\n      datasets: datasets,\r\n    };\r\n  }\r\n\r\n  return (\r\n    chartData && (\r\n      <div className='project-dept'>\r\n        <Bar\r\n          data={chartData}\r\n          width={100}\r\n          height={50}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n              xAxes: [{ stacked: true }],\r\n              yAxes: [{ stacked: true }],\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","C:\\Users\\Daniel\\projects\\danschedules\\src\\components\\landing\\LandingPage.js",["97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"106","line":1,"column":50,"nodeType":"104","messageId":"105","endLine":1,"endColumn":58},{"ruleId":"102","severity":1,"message":"107","line":2,"column":35,"nodeType":"104","messageId":"105","endLine":2,"endColumn":41},{"ruleId":"102","severity":1,"message":"108","line":2,"column":43,"nodeType":"104","messageId":"105","endLine":2,"endColumn":48},{"ruleId":"102","severity":1,"message":"109","line":2,"column":50,"nodeType":"104","messageId":"105","endLine":2,"endColumn":54},{"ruleId":"102","severity":1,"message":"110","line":17,"column":5,"nodeType":"104","messageId":"105","endLine":17,"endColumn":20},{"ruleId":"102","severity":1,"message":"111","line":19,"column":5,"nodeType":"104","messageId":"105","endLine":19,"endColumn":15},{"ruleId":"102","severity":1,"message":"112","line":20,"column":5,"nodeType":"104","messageId":"105","endLine":20,"endColumn":17},{"ruleId":"102","severity":1,"message":"113","line":21,"column":5,"nodeType":"104","messageId":"105","endLine":21,"endColumn":16},{"ruleId":"102","severity":1,"message":"114","line":26,"column":10,"nodeType":"104","messageId":"105","endLine":26,"endColumn":18},{"ruleId":"102","severity":1,"message":"115","line":26,"column":20,"nodeType":"104","messageId":"105","endLine":26,"endColumn":31},{"ruleId":"102","severity":1,"message":"116","line":28,"column":10,"nodeType":"104","messageId":"105","endLine":28,"endColumn":18},{"ruleId":"102","severity":1,"message":"117","line":28,"column":20,"nodeType":"104","messageId":"105","endLine":28,"endColumn":31},{"ruleId":"118","severity":1,"message":"119","line":32,"column":24,"nodeType":"120","messageId":"121","endLine":32,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":37,"column":33,"nodeType":"120","messageId":"121","endLine":37,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":47,"column":31,"nodeType":"120","messageId":"121","endLine":47,"endColumn":33},{"ruleId":"118","severity":1,"message":"119","line":50,"column":40,"nodeType":"120","messageId":"121","endLine":50,"endColumn":42},{"ruleId":"118","severity":1,"message":"119","line":82,"column":31,"nodeType":"120","messageId":"121","endLine":82,"endColumn":33},{"ruleId":"118","severity":1,"message":"119","line":87,"column":40,"nodeType":"120","messageId":"121","endLine":87,"endColumn":42},{"ruleId":"122","severity":1,"message":"123","line":3,"column":1,"nodeType":"124","endLine":27,"endColumn":2},{"ruleId":"102","severity":1,"message":"107","line":2,"column":15,"nodeType":"104","messageId":"105","endLine":2,"endColumn":21},{"ruleId":"102","severity":1,"message":"108","line":2,"column":23,"nodeType":"104","messageId":"105","endLine":2,"endColumn":28},{"ruleId":"102","severity":1,"message":"125","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":14},{"ruleId":"98","replacedBy":"126"},{"ruleId":"100","replacedBy":"127"},{"ruleId":"102","severity":1,"message":"128","line":8,"column":10,"nodeType":"104","messageId":"105","endLine":8,"endColumn":20},{"ruleId":"102","severity":1,"message":"129","line":8,"column":22,"nodeType":"104","messageId":"105","endLine":8,"endColumn":35},{"ruleId":"102","severity":1,"message":"130","line":10,"column":10,"nodeType":"104","messageId":"105","endLine":10,"endColumn":22},{"ruleId":"102","severity":1,"message":"131","line":10,"column":24,"nodeType":"104","messageId":"105","endLine":10,"endColumn":40},{"ruleId":"132","severity":1,"message":"133","line":27,"column":35,"nodeType":"120","messageId":"134","endLine":34,"endColumn":10},{"ruleId":"102","severity":1,"message":"135","line":16,"column":5,"nodeType":"104","messageId":"105","endLine":16,"endColumn":16},{"ruleId":"132","severity":1,"message":"136","line":29,"column":34,"nodeType":"120","messageId":"134","endLine":41,"endColumn":8},{"ruleId":"137","severity":1,"message":"138","line":184,"column":11,"nodeType":"139","endLine":184,"endColumn":52},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'setInitialState' is assigned a value but never used.","'importData' is assigned a value but never used.","'importedData' is assigned a value but never used.","'processData' is assigned a value but never used.","'hideshow' is assigned a value but never used.","'setHideShow' is assigned a value but never used.","'fileData' is assigned a value but never used.","'getFileData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Person' is defined but never used.",["140"],["141"],"'loadedData' is assigned a value but never used.","'setLoadedData' is assigned a value but never used.","'chartCreated' is assigned a value but never used.","'setChartsCreated' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'tempTotal', 'tempTotal'.","unsafeRefs","'projectList' is assigned a value but never used.","Function declared in a loop contains unsafe references to variable(s) 'hours', 'hours'.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]